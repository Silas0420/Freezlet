var path = require('path');
var child_proccess = require('child_process');

var midware = module.exports = function (config, other) {
	if(typeof config == 'undefined' || typeof config == 'object') {

		config = config || {hooks: {}};

		config.goodResultHandler = config.goodResultHandler || midware.goodResultHandler;
		config.badResultHandler = config.badResultHandler || midware.badResultHandler;
		config.notFoundHandler = config.notFoundHandler || midware.notFoundHandler;

		return function (req, res) {
			var command = config.hooks[req.path];
			if (command) {
				child_proccess.exec(command, function (err, stdout, stderr) {
					if (err) config.badResultHandler(err, req, res, stdout, stderr);
					else config.goodResultHandler(req, res)
				})
			}
			else {
				config.notFoundHandler(req, res);
			}
		}
	}
	else if(typeof config == 'string'){
		console.error('webhook:', 'not support for \'' + config + '\'');
	}
	else{
		console.error('webhook:', 'need config');
	}
};

midware.goodResultHandler = function (req, res) {
	res.status(200).end();
};

midware.badResultHandler = function (err, req, res, stdout, stderr) {
	console.error('Bad Result.');
	console.log(stdout);
	console.log(stderr);
	res.status(400).end();
};

midware.notFoundHandler = function (req, res) {
		res.status(404).end();
	};